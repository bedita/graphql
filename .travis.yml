language: php

dist: trusty
sudo: required

services:
  - mysql
  - postgresql

addons:
  postgresql: "9.6"
  apt:
    packages:
      - postgresql-9.6-postgis-2.3 # Fix error with PostGIS extension not being found when `CREATE EXTENSION` is issued.

cache:
  directories:
    - vendor
    - $HOME/.composer/cache

jobs:
  fast_finish: true

  include:
    # Minimal tests set: SQLite on PHP 5.6/7.0, MySQL 5.7 on PHP 7.0 and code sniffer.
    - stage: minimal
      php: 5.6
      env: "DB=sqlite db_dsn='sqlite:///tmp/test.sql'"
    - stage: minimal
      php: 7.0
      env: "DB=sqlite db_dsn='sqlite:///tmp/test.sql'"
    - stage: minimal
      php: 7.2
      env: "DB=mysql DB_VERSION=5.7 db_dsn='mysql://root@localhost/bedita_test'"
    - stage: minimal
      php: 7.1
      services: []
      addons: {}
      env: "RUN=phpcs"
      before_script: skip
      script: |
        vendor/bin/phpcs -n -p --extensions=php \
          --standard=vendor/cakephp/cakephp-codesniffer/CakePHP --ignore=/Migrations/,/Seeds/ \
          ./config ./src ./tests

    # Reference tests set with coverage: PHP 7.1 with MySQL 5.7, SQlite and PostgreSQL 9.6 + PostGIS
    - stage: reference
      php: 7.1
      env: "DB=mysql DB_VERSION=5.7 db_dsn='mysql://root@localhost/bedita_test'"
      script: vendor/bin/phpunit --coverage-clover=clover.xml
      after_success: bash <(curl -s https://codecov.io/bash)
    - stage: reference
      php: 7.1
      env: "DB=sqlite db_dsn='sqlite:///tmp/test.sql'"
      script: vendor/bin/phpunit --coverage-clover=clover.xml
      after_success: bash <(curl -s https://codecov.io/bash)
    - stage: reference
      php: 7.1
      env: "DB=pgsql DB_VERSION=9.6 DB_POSTGIS=1 db_dsn='postgres://postgres@127.0.0.1/bedita_test'"
      script: vendor/bin/phpunit --coverage-clover=clover.xml
      after_success: bash <(curl -s https://codecov.io/bash)

    # Complete tests suite: SQLite on PHP 5.6 with lowest dependencies, * MySQL 5.7 on PHP 5.6,
    #    PostgreSQL 9.6 on PHP 5.6/7.0, MySQL 5.6 and PostgreSQL 9.5 on PHP 7.1, static code analyzer.

    # Stage with lowest dependencies not working for now...
    # - stage: complete
    #   php: 5.6
    #   env: "DB=sqlite db_dsn='sqlite:///tmp/test.sql' PREFER_LOWEST=1"
    #   install:
    #     - composer install --prefer-dist --no-interaction
    #     - composer update --prefer-dist --prefer-lowest --no-interaction
    #     # Ensure PHPUnit is installed from source (i.e.: Git repository) otherwise a wrong version is being detected. :|
    #     - rm -rf vendor/phpunit/phpunit vendor/bin/phpunit && COMPOSER_CACHE_DIR=/dev/null composer update --prefer-source --prefer-lowest --no-interaction
    - stage: complete
      php: 5.6
      env: "DB=pgsql DB_VERSION=9.6 db_dsn='postgres://postgres@127.0.0.1/bedita_test'"
    - stage: complete
      php: 5.6
      env: "DB=mysql DB_VERSION=5.7 db_dsn='mysql://root@localhost/bedita_test'"
    # - stage: complete
    #   php: 7.0
    #   env: "DB=pgsql DB_VERSION=9.6 db_dsn='postgres://postgres@127.0.0.1/bedita_test'"
    - stage: complete
      php: 7.1
      services: []
      addons: {}
      env: "RUN=phpstan"
      install:
        - composer install --prefer-dist --no-interaction
        - composer require --dev phpstan/phpstan
      before_script: skip
      script: vendor/bin/phpstan analyse --no-progress src

  allow_failures:
    - env: "RUN=phpstan"

before_install:
  # Use GitHub OAuth token with Composer to increase API limits.
  - if [ -n "$GH_TOKEN" ]; then composer config github-oauth.github.com ${GH_TOKEN}; fi

install:
  # Install Composer dependencies.
  - composer install --prefer-dist --no-interaction

before_script:
  - phpenv rehash
  - set +H

  # Set up and configure databases.
  - | # Install MySQL 5.7.
    if [ "$DB" = 'mysql' ] && [ "$DB_VERSION" = '5.7' ]; then
      echo mysql-apt-config mysql-apt-config/select-server select mysql-5.7 | sudo debconf-set-selections
      wget http://dev.mysql.com/get/mysql-apt-config_0.7.3-1_all.deb
      sudo dpkg --install mysql-apt-config_0.7.3-1_all.deb
      sudo apt-get update -q
      sudo apt-get install -q -y --force-yes -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" mysql-server
      sudo mysql_upgrade
    fi
  - if [ "$DB" = 'mysql' ]; then mysql -u root -e 'CREATE DATABASE bedita_test;'; mysql -u root -e 'SHOW DATABASES;'; fi
  - if [ "$DB" = 'pgsql' ]; then psql -c 'CREATE DATABASE bedita_test;' -U postgres; fi
  - if [ "$DB" = 'pgsql' ] && [ "$DB_POSTGIS" = '1' ]; then psql -c 'CREATE EXTENSION postgis;' -U postgres; fi

script: vendor/bin/phpunit # Run PHPUnit.

notifications:
  email: false
